const { Bot, InlineKeyboard } = require('grammy');
require('dotenv').config();

const bot = new Bot(process.env.TOKEN); // –¢–æ–∫–µ–Ω –±–æ—Ç–∞

const userState = {};

// ID –≥—Ä—É–ø–ø—ã –∏ —Ç–µ–º
const GROUP_ID = process.env.CHAT_ID; // –û—Å–Ω–æ–≤–Ω–æ–π chat_id –≥—Ä—É–ø–ø—ã

// ID —Ç–æ–ø–∏–∫–æ–≤
const TOPICS = {
	// —Ç–æ–ø–∏–∫ —É–ø—Ä. 3 –º—Å–¥ –∏ –¥—Ä—É–≥–∏–µ
	'3msd': {
		active: 10,
		completed: 12,
	},
	// —Ç–æ–ø–∏–∫ 245 –º—Å–ø
	'245msp': {
		active: 8,
		completed: 20,
	},
	// —Ç–æ–ø–∏–∫ 252 –º—Å–ø
	'252msp': {
		active: 2,
		completed: 14,
	},
	// —Ç–æ–ø–∏–∫ 752 –º—Å–ø
	'752msp': {
		active: 4,
		completed: 16,
	},
	// —Ç–æ–ø–∏–∫ 237 —Ç–ø
	'237tp': {
		active: 6,
		completed: 18,
	},
};

async function askQuestion(ctx) {
	const keyboard = new InlineKeyboard().text(
		'–í—ã–±—Ä–∞—Ç—å –≤–æ–π—Å–∫–æ–≤—É—é —á–∞—Å—Ç—å',
		'select_unit'
	);

	await ctx.reply('–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –≤—ã–±–µ—Ä–∏—Ç–µ –∏–Ω—Ç–µ—Ä–µ—Å—É—é—â–∏–π –≤–∞—Å –≤–æ–ø—Ä–æ—Å:', {
		reply_markup: keyboard,
	});
}

// –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –≤—ã–±–æ—Ä–∞ —á–∞—Å—Ç–∏
bot.callbackQuery('select_unit', async (ctx) => {
	const keyboard = new InlineKeyboard()
		.text('—É–ø—Ä. 3 –º—Å–¥', 'unit_3msd')
		.row()
		.text('245 –º—Å–ø', 'unit_245msp')
		.row()
		.text('252 –º—Å–ø', 'unit_252msp')
		.row()
		.text('752 –º—Å–ø', 'unit_752msp')
		.row()
		.text('237 —Ç–ø', 'unit_237tp')
		.row()
		.text('–¥—Ä—É–≥–∏–µ', 'unit_3msd');

	await ctx.reply(
		'–í—ã–±–µ—Ä–∏—Ç–µ –≤–æ–π—Å–∫–æ–≤—É—é —á–∞—Å—Ç—å, –≤ –∫–æ—Ç–æ—Ä–æ–π –ø—Ä–æ—Ö–æ–¥–∏—Ç —Å–ª—É–∂–±—É –≤–æ–µ–Ω–Ω–æ—Å–ª—É–∂–∞—â–µ–≥–æ:',
		{
			reply_markup: keyboard,
		}
	);
});

// –û–±—Ä–∞–±–æ—Ç—á–∏–∫–∏ –≤—ã–±–æ—Ä–∞ —á–∞—Å—Ç–∏
const units = ['3msd', '245msp', '252msp', '752msp', '237tp', '3msd'];
units.forEach((unit) => {
	bot.callbackQuery(`unit_${unit}`, async (ctx) => {
		const userId = ctx.from.id;
		userState[userId] = {
			unit: unit,
			step: 'ask_soldier_fio',
		};
		await ctx.reply('–í–≤–µ–¥–∏—Ç–µ –§–ò–û –≤–æ–µ–Ω–Ω–æ—Å–ª—É–∂–∞—â–µ–≥–æ:');
		await ctx.answerCallbackQuery();
	});
});

bot.on('message:text', async (ctx) => {
	const userId = ctx.from.id;
	const state = userState[userId];
	const username = ctx.from.username ? `@${ctx.from.username}` : '–Ω–µ —É–∫–∞–∑–∞–Ω';

	if (ctx.message.text.startsWith('/')) {
		await ctx.reply(
			'–ó–¥—Ä–∞–≤—Å—Ç–≤—É–π—Ç–µ, –≤—ã –æ–±—Ä–∞—Ç–∏–ª–∏—Å—å –Ω–∞ –≥–æ—Ä—è—á—É—é –ª–∏–Ω–∏—é 3 –º–æ—Ç–æ—Å—Ç—Ä–µ–ª–∫–æ–≤–æ–π –¥–∏–≤–∏–∑–∏–∏ 20 –≥–≤–∞—Ä–¥–µ–π—Å–∫–æ–π –æ–±—â–µ–≤–æ–π—Å–∫–æ–≤–æ–π –∞—Ä–º–∏–∏ –ú–æ—Å–∫–æ–≤—Å–∫–æ–≥–æ –≤–æ–µ–Ω–Ω–æ–≥–æ –æ–∫—Ä—É–≥–∞!'
		);
		await askQuestion(ctx);
	}
	if (!state) return;

	if (state.step === 'ask_soldier_fio') {
		if (ctx.message.text.length < 5) {
			return await ctx.reply(
				'–§–ò–û –¥–æ–ª–∂–Ω–æ —Å–æ–¥–µ—Ä–∂–∞—Ç—å –Ω–µ –º–µ–Ω–µ–µ 5 —Å–∏–º–≤–æ–ª–æ–≤. –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –≤–≤–µ–¥–∏—Ç–µ —Å–Ω–æ–≤–∞:'
			);
		}
		state.soldierFio = ctx.message.text;
		state.step = 'ask_soldier_birthdate';
		await ctx.reply(
			'–í–≤–µ–¥–∏—Ç–µ –¥–∞—Ç—É —Ä–æ–∂–¥–µ–Ω–∏—è –≤–æ–µ–Ω–Ω–æ—Å–ª—É–∂–∞—â–µ–≥–æ (–≤ —Ñ–æ—Ä–º–∞—Ç–µ –î–î.–ú–ú.–ì–ì–ì–ì):'
		);
	} else if (state.step === 'ask_soldier_birthdate') {
		// –ü—Ä–æ—Å—Ç–∞—è –ø—Ä–æ–≤–µ—Ä–∫–∞ —Ñ–æ—Ä–º–∞—Ç–∞ –¥–∞—Ç—ã (–º–æ–∂–Ω–æ —É–ª—É—á—à–∏—Ç—å)
		if (!/^\d{2}\.\d{2}\.\d{4}$/.test(ctx.message.text)) {
			return await ctx.reply(
				'–ù–µ–≤–µ—Ä–Ω—ã–π —Ñ–æ—Ä–º–∞—Ç –¥–∞—Ç—ã. –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –≤–≤–µ–¥–∏—Ç–µ –¥–∞—Ç—É –≤ —Ñ–æ—Ä–º–∞—Ç–µ –î–î.–ú–ú.–ì–ì–ì–ì:'
			);
		}
		state.soldierBirthdate = ctx.message.text;
		state.step = 'ask_soldier_number';
		await ctx.reply(
			'–í–≤–µ–¥–∏—Ç–µ –ª–∏—á–Ω—ã–π –Ω–æ–º–µ—Ä –≤–æ–µ–Ω–Ω–æ—Å–ª—É–∂–∞—â–µ–≥–æ (–µ—Å–ª–∏ –Ω–µ –∑–Ω–∞–µ—Ç–µ, –æ—Ç–ø—Ä–∞–≤—å—Ç–µ "-"):'
		);
	} else if (state.step === 'ask_soldier_number') {
		state.soldierNumber =
			ctx.message.text === '-' ? '–Ω–µ —É–∫–∞–∑–∞–Ω' : ctx.message.text;
		state.step = 'ask_requester_relation';
		await ctx.reply(
			'–£–∫–∞–∂–∏—Ç–µ, –∫–µ–º –≤—ã —è–≤–ª—è–µ—Ç–µ—Å—å –≤–æ–µ–Ω–Ω–æ—Å–ª—É–∂–∞—â–µ–º—É (—Ä–æ–¥—Å—Ç–≤–µ–Ω–Ω–∞—è —Å–≤—è–∑—å –∏–ª–∏ –¥–æ–ª–∂–Ω–æ—Å—Ç—å):'
		);
	} else if (state.step === 'ask_requester_relation') {
		state.requesterRelation = ctx.message.text;
		state.step = 'ask_requester_fio';
		await ctx.reply('–í–≤–µ–¥–∏—Ç–µ –≤–∞—à–µ –§–ò–û:');
	} else if (state.step === 'ask_requester_fio') {
		if (ctx.message.text.length < 5) {
			return await ctx.reply(
				'–§–ò–û –¥–æ–ª–∂–Ω–æ —Å–æ–¥–µ—Ä–∂–∞—Ç—å –Ω–µ –º–µ–Ω–µ–µ 5 —Å–∏–º–≤–æ–ª–æ–≤. –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –≤–≤–µ–¥–∏—Ç–µ —Å–Ω–æ–≤–∞:'
			);
		}
		state.requesterFio = ctx.message.text;
		state.step = 'ask_requester_phone';
		await ctx.reply('–í–≤–µ–¥–∏—Ç–µ –≤–∞—à –∫–æ–Ω—Ç–∞–∫—Ç–Ω—ã–π –Ω–æ–º–µ—Ä —Ç–µ–ª–µ—Ñ–æ–Ω–∞:');
	} else if (state.step === 'ask_requester_phone') {
		// –ü—Ä–æ—Å—Ç–∞—è –ø—Ä–æ–≤–µ—Ä–∫–∞ –Ω–æ–º–µ—Ä–∞ —Ç–µ–ª–µ—Ñ–æ–Ω–∞ (–º–æ–∂–Ω–æ —É–ª—É—á—à–∏—Ç—å)
		if (ctx.message.text.length < 5) {
			return await ctx.reply(
				'–ù–æ–º–µ—Ä —Ç–µ–ª–µ—Ñ–æ–Ω–∞ —Å–ª–∏—à–∫–æ–º –∫–æ—Ä–æ—Ç–∫–∏–π. –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –≤–≤–µ–¥–∏—Ç–µ —Å–Ω–æ–≤–∞:'
			);
		}
		state.requesterPhone = ctx.message.text;

		// –§–æ—Ä–º–∏—Ä—É–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ –¥–ª—è –≥—Ä—É–ø–ø—ã
		const message =
			`üìå –ù–æ–≤—ã–π –∑–∞–ø—Ä–æ—Å\n\n` +
			`–í–æ–π—Å–∫–æ–≤–∞—è —á–∞—Å—Ç—å: ${state.unit}\n\n` +
			`–î–∞–Ω–Ω—ã–µ –≤–æ–µ–Ω–Ω–æ—Å–ª—É–∂–∞—â–µ–≥–æ:\n` +
			`–§–ò–û: ${state.soldierFio}\n` +
			`–î–∞—Ç–∞ —Ä–æ–∂–¥–µ–Ω–∏—è: ${state.soldierBirthdate}\n` +
			`–õ–∏—á–Ω—ã–π –Ω–æ–º–µ—Ä: ${state.soldierNumber}\n\n` +
			`–î–∞–Ω–Ω—ã–µ –∑–∞—è–≤–∏—Ç–µ–ª—è:\n` +
			`–ö–µ–º –ø—Ä–∏—Ö–æ–¥–∏—Ç—Å—è: ${state.requesterRelation}\n` +
			`–§–ò–û: ${state.requesterFio}\n` +
			`–¢–µ–ª–µ—Ñ–æ–Ω: ${state.requesterPhone}\n` +
			`–ö–æ–Ω—Ç–∞–∫—Ç: ${username}`;

		const threadId = TOPICS[state.unit]?.active || TOPICS['other'].active;
		await ctx.api.sendMessage(GROUP_ID, message, {
			message_thread_id: threadId,
			parse_mode: 'HTML',
		});

		await ctx.reply(
			'‚úÖ –í–∞—à –∑–∞–ø—Ä–æ—Å –ø—Ä–∏–Ω—è—Ç. –û–ø–µ—Ä–∞—Ç–æ—Ä —Å–≤—è–∂–µ—Ç—Å—è —Å –≤–∞–º–∏ –≤ –±–ª–∏–∂–∞–π—à–µ–µ –≤—Ä–µ–º—è.'
		);
		delete userState[userId];
	}
});

bot.start();
console.log('–ë–æ—Ç –∑–∞–ø—É—â–µ–Ω!');
