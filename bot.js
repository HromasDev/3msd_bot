const { Bot, InlineKeyboard } = require('grammy');
require('dotenv').config();

// –ü—Ä–æ–≤–µ—Ä–∫–∞ –ø–µ—Ä–µ–º–µ–Ω–Ω—ã—Ö –æ–∫—Ä—É–∂–µ–Ω–∏—è
if (!process.env.TOKEN || !process.env.CHAT_ID) {
	console.error('–û—à–∏–±–∫–∞: –ù–µ —É–∫–∞–∑–∞–Ω—ã TOKEN –∏–ª–∏ CHAT_ID –≤ .env —Ñ–∞–π–ª–µ!');
	process.exit(1);
}

const bot = new Bot(process.env.TOKEN);
const userState = {};
const GROUP_ID = process.env.CHAT_ID;

// –ö–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—è —Ç–æ–ø–∏–∫–æ–≤
const TOPICS = {
	'3msd': { active: 10, completed: 12 },
	'245msp': { active: 8, completed: 20 },
	'252msp': { active: 2, completed: 14 },
	'752msp': { active: 4, completed: 16 },
	'237tp': { active: 6, completed: 18 },
	other: { active: 10, completed: 12 },
};

// –§—É–Ω–∫—Ü–∏—è –¥–ª—è –±–µ–∑–æ–ø–∞—Å–Ω–æ–π –æ—Ç–ø—Ä–∞–≤–∫–∏ —Å–æ–æ–±—â–µ–Ω–∏–π
async function safeReply(ctx, text, options = {}) {
	try {
		await ctx.reply(text, options);
		return true;
	} catch (error) {
		if (
			error.description &&
			error.description.includes('bot was blocked by the user')
		) {
			console.log(`–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å ${ctx.from.id} –∑–∞–±–ª–æ–∫–∏—Ä–æ–≤–∞–ª –±–æ—Ç–∞`);
			delete userState[ctx.from.id];
		} else {
			console.error('–û—à–∏–±–∫–∞ –ø—Ä–∏ –æ—Ç–ø—Ä–∞–≤–∫–µ —Å–æ–æ–±—â–µ–Ω–∏—è:', error);
		}
		return false;
	}
}

// –§—É–Ω–∫—Ü–∏—è –¥–ª—è –æ—Ç–ø—Ä–∞–≤–∫–∏ —Å–æ–æ–±—â–µ–Ω–∏—è –≤ –≥—Ä—É–ø–ø—É
async function sendToGroup(ctx, message, unit) {
	try {
		const threadId = TOPICS[unit]?.active || TOPICS['other'].active;
		await ctx.api.sendMessage(GROUP_ID, message, {
			message_thread_id: threadId,
			parse_mode: 'HTML',
		});
		return true;
	} catch (error) {
		console.error('–û—à–∏–±–∫–∞ –ø—Ä–∏ –æ—Ç–ø—Ä–∞–≤–∫–µ –≤ –≥—Ä—É–ø–ø—É:', error);
		await safeReply(
			ctx,
			'‚ö†Ô∏è –û—à–∏–±–∫–∞ –ø—Ä–∏ –æ—Ç–ø—Ä–∞–≤–∫–µ –∑–∞–ø—Ä–æ—Å–∞. –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –ø–æ–ø—Ä–æ–±—É–π—Ç–µ –ø–æ–∑–∂–µ.'
		);
		return false;
	}
}

async function showUnitSelection(ctx) {
	const keyboard = new InlineKeyboard()
		.text('—É–ø—Ä. 3 –º—Å–¥', 'unit_3msd')
		.row()
		.text('245 –º—Å–ø', 'unit_245msp')
		.row()
		.text('252 –º—Å–ø', 'unit_252msp')
		.row()
		.text('752 –º—Å–ø', 'unit_752msp')
		.row()
		.text('237 —Ç–ø', 'unit_237tp')
		.row()
		.text('–¥—Ä—É–≥–∏–µ', 'unit_other');

	await safeReply(
		ctx,
		'–í—ã–±–µ—Ä–∏—Ç–µ –≤–æ–π—Å–∫–æ–≤—É—é —á–∞—Å—Ç—å, –≤ –∫–æ—Ç–æ—Ä–æ–π –ø—Ä–æ—Ö–æ–¥–∏—Ç —Å–ª—É–∂–±—É –≤–æ–µ–Ω–Ω–æ—Å–ª—É–∂–∞—â–µ–≥–æ:',
		{ reply_markup: keyboard }
	);
}

const units = ['3msd', '245msp', '252msp', '752msp', '237tp', 'other'];
units.forEach((unit) => {
	bot.callbackQuery(`unit_${unit}`, async (ctx) => {
		const userId = ctx.from.id;
		if (!userState[userId]) userState[userId] = {};

		userState[userId].unit = unit;
		userState[userId].step = 'ask_soldier_fio';

		await safeReply(ctx, '–í–≤–µ–¥–∏—Ç–µ –§–ò–û –≤–æ–µ–Ω–Ω–æ—Å–ª—É–∂–∞—â–µ–≥–æ:');
		await ctx.answerCallbackQuery();
	});
});

// –û–±—Ä–∞–±–æ—Ç—á–∏–∫ —Ç–µ–∫—Å—Ç–æ–≤—ã—Ö —Å–æ–æ–±—â–µ–Ω–∏–π
bot.start(async (ctx) => {
		await safeReply(
			ctx,
			'–ó–¥—Ä–∞–≤—Å—Ç–≤—É–π—Ç–µ, –í—ã –æ–±—Ä–∞—Ç–∏–ª–∏—Å—å –Ω–∞ –≥–æ—Ä—è—á—É—é –ª–∏–Ω–∏—é 3 –º–æ—Ç–æ—Å—Ç—Ä–µ–ª–∫–æ–≤–æ–π –¥–∏–≤–∏–∑–∏–∏ 20 –∞—Ä–º–∏–∏ –ú–æ—Å–∫–æ–≤—Å–∫–æ–≥–æ –≤–æ–µ–Ω–Ω–æ–≥–æ –æ–∫—Ä—É–≥–∞! –¢—É—Ç –≤—ã –º–æ–∂–µ—Ç–µ —É—Ç–æ—á–Ω–∏—Ç—å —Ä—è–¥ –≤–æ–ø—Ä–æ—Å–æ–≤:'
		);
		await safeReply(
			ctx,
			'- ‚úÖ –ó–∞–∫–∞–∑–∞—Ç—å —Å–ø—Ä–∞–≤–∫—É 1421 - –¥–∞–Ω–Ω–∞—è —Å–ø—Ä–∞–≤–∫–∞ –Ω–µ–æ–±—Ö–æ–¥–∏–º–∞ –¥–ª—è –ø—Ä–∏–∑–Ω–∞–Ω–∏—è –±–µ–∑–≤–µ—Å—Ç–Ω–æ –æ—Ç—Å—É—Ç—Å—Ç–≤—É—é—â–µ–≥–æ \n\n'+
			'–≤–æ–µ–Ω–Ω–æ—Å–ª—É–∂–∞—â–µ–≥–æ —É–º–µ—Ä—à–∏–º –∏ –æ—Ñ–æ—Ä–º–ª–µ–Ω–∏—è —Å–æ—Ü–∏–∞–ª—å–Ω—ã—Ö –≤—ã–ø–ª–∞—Ç \n\n'+
			'- ‚úÖ –û—Ñ–æ—Ä–º–∏—Ç—å –µ–∂–µ–º–µ—Å—è—á–Ω—É—é –≤—ã–ø–ª–∞—Ç—É –≤ —Ä–∞–∑–º–µ—Ä–µ –ú–†–û–¢ –≤ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏ –æ—Ç —Ä–µ–≥–∏–æ–Ω–æ–≤ –¥–µ—Ç—è–º –±–µ–∑–≤–µ—Å—Ç–Ω–æ –æ—Ç—Å—É—Ç—Å—Ç–≤—É—é—â–∏—Ö –≤–æ–µ–Ω–Ω–æ—Å–ª—É–∂–∞—â–∏—Ö, —Å–æ–≥–ª–∞—Å–Ω–æ n\n\'
			'–£–∫–∞–∑–∞ –ü—Ä–µ–∑–∏–¥–µ–Ω—Ç–∞ –†–æ—Å—Å–∏–π—Å–∫–æ–π –§–µ–¥–µ—Ä–∞—Ü–∏–∏ –æ—Ç 26.12.2024 –≥–æ–¥–∞ ‚Ññ1110 n\n\'+
			'- ‚úÖ –£—Å—Ç–∞–Ω–æ–≤–∏—Ç—å –±–∞–Ω–∫–æ–≤—Å–∫–∏–µ —Ä–µ–∫–≤–∏–∑–∏—Ç—ã —Ä–æ–¥—Å—Ç–≤–µ–Ω–Ω–∏–∫–æ–≤ –±–µ–∑–≤–µ—Å—Ç–Ω–æ –æ—Ç—Å—É—Ç—Å—Ç–≤—É—é—â–∏—Ö –≤–æ–µ–Ω–Ω–æ—Å–ª—É–∂–∞—â–∏—Ö n\n\'+
			'–¥–ª—è –≤—ã–ø–ª–∞—Ç—ã –µ–∂–µ–º–µ—Å—è—á–Ω–æ–≥–æ –¥–µ–Ω–µ–∂–Ω–æ–≥–æ –¥–æ–≤–æ–ª—å—Å—Ç–≤–∏—è'+
			'- ‚úÖ –£–∑–Ω–∞—Ç—å —Å—Ç–∞—Ç—É—Å –≤–æ–µ–Ω–Ω–æ—Å–ª—É–∂–∞—â–µ–≥–æ –∏–ª–∏ —Å–≤—è–∑–∞—Ç—å—Å—è —Å –ø—Ä–µ–¥—Å—Ç–∞–≤–∏—Ç–µ–ª—è–º–∏ –≥–æ—Ä—è—á–µ–π –ª–∏–Ω–∏–∏'
		);

});

bot.command("statusvsl",async (ctx) => {
	const userId = ctx.from.id;
	const state = userState[userId];
	const username = ctx.from.username ? `@${ctx.from.username}` : '–Ω–µ —É–∫–∞–∑–∞–Ω';

	if (ctx.chat.type !== 'private') return;
	userState[userId] = { step: 'ask_question' };

	await safeReply(
		ctx,
		'–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –≤–≤–µ–¥–∏—Ç–µ –≤–∞—à –≤–æ–ø—Ä–æ—Å:'
	);
	try {
		switch (state.step) {
			case 'ask_question':
				if (ctx.message.text.length < 5) {
					await safeReply(
						ctx,
						'–í–æ–ø—Ä–æ—Å –¥–æ–ª–∂–µ–Ω —Å–æ–¥–µ—Ä–∂–∞—Ç—å –Ω–µ –º–µ–Ω–µ–µ 5 —Å–∏–º–≤–æ–ª–æ–≤. –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –≤–≤–µ–¥–∏—Ç–µ —Å–Ω–æ–≤–∞:'
					);
					return;
				}
				state.question = ctx.message.text;
				state.step = 'select_unit';
				await showUnitSelection(ctx);
				break;

			case 'ask_soldier_fio':
				if (ctx.message.text.length < 5) {
					await safeReply(
						ctx,
						'–§–ò–û –¥–æ–ª–∂–Ω–æ —Å–æ–¥–µ—Ä–∂–∞—Ç—å –Ω–µ –º–µ–Ω–µ–µ 5 —Å–∏–º–≤–æ–ª–æ–≤. –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –≤–≤–µ–¥–∏—Ç–µ —Å–Ω–æ–≤–∞:'
					);
					return;
				}
				state.soldierFio = ctx.message.text;
				state.step = 'ask_soldier_birthdate';
				await safeReply(
					ctx,
					'–í–≤–µ–¥–∏—Ç–µ –¥–∞—Ç—É —Ä–æ–∂–¥–µ–Ω–∏—è –≤–æ–µ–Ω–Ω–æ—Å–ª—É–∂–∞—â–µ–≥–æ (–≤ —Ñ–æ—Ä–º–∞—Ç–µ –î–î.–ú–ú.–ì–ì–ì–ì):'
				);
				break;

			case 'ask_soldier_birthdate':
				if (!/^\d{2}\.\d{2}\.\d{4}$/.test(ctx.message.text)) {
					await safeReply(
						ctx,
						'–ù–µ–≤–µ—Ä–Ω—ã–π —Ñ–æ—Ä–º–∞—Ç –¥–∞—Ç—ã. –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –≤–≤–µ–¥–∏—Ç–µ –¥–∞—Ç—É –≤ —Ñ–æ—Ä–º–∞—Ç–µ –î–î.–ú–ú.–ì–ì–ì–ì:'
					);
					return;
				}
				state.soldierBirthdate = ctx.message.text;
				state.step = 'ask_soldier_number';
				await safeReply(
					ctx,
					'–í–≤–µ–¥–∏—Ç–µ –ª–∏—á–Ω—ã–π –Ω–æ–º–µ—Ä –≤–æ–µ–Ω–Ω–æ—Å–ª—É–∂–∞—â–µ–≥–æ (–µ—Å–ª–∏ –Ω–µ –∑–Ω–∞–µ—Ç–µ, –æ—Ç–ø—Ä–∞–≤—å—Ç–µ "-"):'
				);
				break;

			case 'ask_soldier_number':
				state.soldierNumber =
					ctx.message.text === '-' ? '–Ω–µ —É–∫–∞–∑–∞–Ω' : ctx.message.text;
				state.step = 'ask_requester_relation';
				await safeReply(
					ctx,
					'–£–∫–∞–∂–∏—Ç–µ, –∫–µ–º –≤—ã —è–≤–ª—è–µ—Ç–µ—Å—å –≤–æ–µ–Ω–Ω–æ—Å–ª—É–∂–∞—â–µ–º—É (—Ä–æ–¥—Å—Ç–≤–µ–Ω–Ω–∞—è —Å–≤—è–∑—å –∏–ª–∏ –¥–æ–ª–∂–Ω–æ—Å—Ç—å):'
				);
				break;

			case 'ask_requester_relation':
				state.requesterRelation = ctx.message.text;
				state.step = 'ask_requester_fio';
				await safeReply(ctx, '–í–≤–µ–¥–∏—Ç–µ –≤–∞—à–µ –§–ò–û:');
				break;

			case 'ask_requester_fio':
				if (ctx.message.text.length < 5) {
					await safeReply(
						ctx,
						'–§–ò–û –¥–æ–ª–∂–Ω–æ —Å–æ–¥–µ—Ä–∂–∞—Ç—å –Ω–µ –º–µ–Ω–µ–µ 5 —Å–∏–º–≤–æ–ª–æ–≤. –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –≤–≤–µ–¥–∏—Ç–µ —Å–Ω–æ–≤–∞:'
					);
					return;
				}
				state.requesterFio = ctx.message.text;
				state.step = 'ask_requester_phone';
				await safeReply(ctx, '–í–≤–µ–¥–∏—Ç–µ –≤–∞—à –∫–æ–Ω—Ç–∞–∫—Ç–Ω—ã–π –Ω–æ–º–µ—Ä —Ç–µ–ª–µ—Ñ–æ–Ω–∞:');
				break;

			case 'ask_requester_phone':
				if (ctx.message.text.length < 5) {
					await safeReply(
						ctx,
						'–ù–æ–º–µ—Ä —Ç–µ–ª–µ—Ñ–æ–Ω–∞ —Å–ª–∏—à–∫–æ–º –∫–æ—Ä–æ—Ç–∫–∏–π. –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –≤–≤–µ–¥–∏—Ç–µ —Å–Ω–æ–≤–∞:'
					);
					return;
				}
				state.requesterPhone = ctx.message.text;

				const message =
					`üìå –ù–æ–≤—ã–π –∑–∞–ø—Ä–æ—Å - —Å–≤—è–∑—å —Å –æ–ø–µ—Ä–∞—Ç–æ—Ä–æ–º –≥–æ—Ä—è—á–µ–π –ª–∏–Ω–∏–∏` +
					`–í–æ–ø—Ä–æ—Å: ${state.question}\n\n` +
					`–í–æ–π—Å–∫–æ–≤–∞—è —á–∞—Å—Ç—å: ${state.unit}\n\n` +
					`–î–∞–Ω–Ω—ã–µ –≤–æ–µ–Ω–Ω–æ—Å–ª—É–∂–∞—â–µ–≥–æ:\n` +
					`–§–ò–û: ${state.soldierFio}\n` +
					`–î–∞—Ç–∞ —Ä–æ–∂–¥–µ–Ω–∏—è: ${state.soldierBirthdate}\n` +
					`–õ–∏—á–Ω—ã–π –Ω–æ–º–µ—Ä: ${state.soldierNumber}\n\n` +
					`–î–∞–Ω–Ω—ã–µ –∑–∞—è–≤–∏—Ç–µ–ª—è:\n` +
					`–ö–µ–º –ø—Ä–∏—Ö–æ–¥–∏—Ç—Å—è: ${state.requesterRelation}\n` +
					`–§–ò–û: ${state.requesterFio}\n` +
					`–¢–µ–ª–µ—Ñ–æ–Ω: ${state.requesterPhone}\n` +
					`–ö–æ–Ω—Ç–∞–∫—Ç: ${username}`;

				const success = await sendToGroup(ctx, message, state.unit);
				if (success) {
					await safeReply(
						ctx,
						'‚úÖ –í–∞—à –∑–∞–ø—Ä–æ—Å –ø—Ä–∏–Ω—è—Ç. –û–ø–µ—Ä–∞—Ç–æ—Ä —Å–≤—è–∂–µ—Ç—Å—è —Å –≤–∞–º–∏ –≤ –±–ª–∏–∂–∞–π—à–µ–µ –≤—Ä–µ–º—è.'
					);
				}
				delete userState[userId];
				break;
		}
	} catch (error) {
		console.error('–û—à–∏–±–∫–∞ –≤ –æ–±—Ä–∞–±–æ—Ç—á–∏–∫–µ —Å–æ–æ–±—â–µ–Ω–∏–π:', error);
		delete userState[userId];
	}

});

bot.command("rekvisites",async (ctx) => {
	await safeReply(
		ctx,
		'–†–µ–∫–≤–∏–∑–∏—Ç—ã –Ω–∞—Ö–æ–¥—è—Ç—Å—è –≤ —Ä–∞–∑—Ä–∞–±–æ—Ç–∫–µ'
	);
});

bot.command("1110",async (ctx) => {
	await safeReply(
		ctx,
		'–£—Å—Ç–∞–Ω–æ–≤–æ–ª–µ–Ω–∏–µ –≤—ã–ø–ª–∞—Ç –¥–µ—Ç—è–º –≤ —Ä–∞–∑—Ä–∞–±–æ—Ç–∫–µ'
	);
});

bot.command("abonent",async (ctx) => {
	await safeReply(
		ctx,
		'–°–ø–∏—Å–æ–∫ –æ–ø–µ—Ä–∞—Ç–æ—Ä–æ–≤ –≥–æ—Ä—è—á–µ–π –ª–∏–Ω–∏–∏:'
	);
});

// –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –æ—à–∏–±–æ–∫
bot.catch((err) => {
	console.error('–û—à–∏–±–∫–∞ –≤ –±–æ—Ç–µ:', err);
});

// –ó–∞–ø—É—Å–∫ –±–æ—Ç–∞
bot
	.start()
	.then(() => console.log('–ë–æ—Ç —É—Å–ø–µ—à–Ω–æ –∑–∞–ø—É—â–µ–Ω!'))
	.catch((err) => console.error('–û—à–∏–±–∫–∞ –ø—Ä–∏ –∑–∞–ø—É—Å–∫–µ –±–æ—Ç–∞:', err));
